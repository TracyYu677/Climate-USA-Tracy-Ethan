% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate_to_grid.R
\name{interpolate_to_grid}
\alias{interpolate_to_grid}
\title{interpolate_to_grid}
\usage{
interpolate_to_grid(
  grid,
  stations_data,
  interest_var = "T_DAILY_AVG",
  year = NULL
)
}
\arguments{
\item{grid}{A data frame containing grid points with columns for latitude 
(LATITUDE) and longitude (LONGITUDE).}

\item{stations_data}{A data frame containing weather station data with 
columns containing at least a column for latitude (LATITUDE), longitude 
(LONGITUDE), date (LST_DATE), and the column of interest}

\item{interest_var}{The names of the column of interest, is "T_DAILY_AVG" by
default.}

\item{year}{Optional, filters out the year of using LST_DATE.}
}
\value{
A data.frame object
}
\description{
This function interpolates daily average temperature data from weather 
stations to grid points using Gaussian process regression (GpGp) with a 
Mat√©rn covariance function on a spherical surface. It first filters the 
stations_data for a specific year (if provided), selects the necessary 
columns, and fits a spatial model using fit_model from GpGp. The fitted 
model is then used to predict T_DAILY_AVG for the grid points, and the 
results, standard error, and p-value are returned as a data frame.
}
\examples{
grid_data <- interpolate_to_grid(grid, stations_data, interest_var = "mean")
grid_data <- interpolate_to_grid(grid, stations_data, year = 2024)

}
